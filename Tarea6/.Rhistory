c(tiempo_platzi, tiempo_lecturas)
tiempo_matriz <- matrix(c(tiempo_platzi, tiempo_lecturas), nrow = 2, byrow=TRUE)
dias <- c(TRUE, FALSE, FALSE, TRUE, TRUE )
tiempo <- c("Tiempo platzi", "tiempo lecturas")
columnas(tiempo_matriz) <- dias
colnames(tiempo_matriz) <- dias
rownames(tiempo_matriz) <- tiempo
colnames(tiempo_matriz) <- dias
rownames(tiempo_matriz) <- tiempo
tiempo_matriz
colnames(tiempo_matriz) <- dias_aprendizaje
rownames(tiempo_matriz) <- tiempo
tiempo_matriz
colSums <- tiempo_matriz
colSums
colSums(tiempo_matriz)
library(pwr)
n.2<- pwr.t.test(d=0.8, sig.level=0.05, power=0.9, type="two.sample", alternative = "two.sided")
rm(list=ls())
n.2<- pwr.t.test(d=0.8, sig.level=0.05, power=0.9, type="two.sample", alternative = "two.sided")
insta.packages("pwr", dependencies = TRUE)
install.packages("pwr", dependencies = TRUE)
install.packages("pwr", dependencies = TRUE)
n.2
n.2<- pwr.t.test(d=0.5, sig.level=0.05, power=0.9, type="two.sample", alternative = "two.sided")
n.2<- pwr.t.test(d=0.5, sig.level=0.05, power=0.9, type="two.sample", alternative = "two.sided")
n.2<- pwr.t.test(d=0.5, sig.level=0.05, power=0.9, type="two.sample", alternative = "two.sided")
install.packages("pwr", dependencies = TRUE)
n.2<- pwr.t.test(d=0.5, sig.level=0.05, power=0.9, type="two.sample", alternative = "two.sided")
install.packages("pwr")
library(pwr)
n.2<- pwr.t.test(d=0.5, sig.level=0.05, power=0.9, type="two.sample", alternative = "two.sided")
n.2
n.3<-pwr.t.test(d=0.5, sig.level=0.05, power=0.80, type="two.sample", alternative = "greater")
n.3
ceiling(n.35n)
ceiling(n.3)
ceiling(n.3Sn)
ceiling(n.$n)
ceiling(n.3$n)
n.4<-pwr.t.test(d=0.8, sig.level=0.05, power=0.8, type="paired", alternative = "two.sided")
n.4
ceiling(n.4$n)
n.4<-pwr.t.test(d=0.8, sig.level=0.05, power=0.8, type="paired", alternative = "greater")
n.4
ceiling(n.4$n)
pwr.anova.test(k=5, n=25, f=0.10, sig.level=0.05)
pwr.anova.test(k=5, n=25, f=0.10, sig.level=0.05)
pwr.anova.test(k=5, n=25, f=0.25, sig.level=0.05)
pwr.anova.test(k=5, n=25, f=0.40, sig.level=0.05)
pwr.anova.test(k=5, n=24, f=0.40, sig.level=0.05)
pwr.anova.test(k=5, n=20, f=0.40, sig.level=0.05)
pwr.anova.test(k=5, n=18, f=0.40, sig.level=0.05)
pwr.anova.test(k=5, n=15, f=0.40, sig.level=0.05)
pwr.anova.test(k=5, n=16, f=0.40, sig.level=0.05)
n.anova.test(k=5, f=0.40, sig.level=0.05)
pwr.anova.test(k=5, n=15, f=0.40, sig.level=0.05)
pwr.anova.test(k=5, power=0.80, f=0.40, sig.level=0.05)
n.5
n.5 =pwr.anova.test(k=5, power=0.80, f=0.40, sig.level=0.05)
n.5
ceiling(n.5$n)
hr_antes <- c(126, 88, 53.1, 98.5, 88.3, 82.5, 105, 41.9)
hr_despues <- (138.6, 110.1, 58.44, 110.2, 89.61, 98.6, 115.3, 64.3)
hr_despues <- c(138.6, 110.1, 58.44, 110.2, 89.61, 98.6, 115.3, 64.3)
mean(hr_antes)
mean(hr_despues)
sd(hr_antes)
sd(hr_despues)
tam_efecto = ( mean(hr_antes) - mean(hr_despues) ) /  (sd(hr_antes) + sd(hr_despues) / 2)
tam_efectdo
tam_efecto
tam_efecto = ( mean(hr_antes) - mean(hr_despues) ) /  (sd(hr_antes) - sd(hr_despues) / 2)
tam_efecto
sd_pooled = sqrt((sd(hr_antes)^2 + sd(hr_despues)^2))
tam_efecto = ( mean(hr_antes) - mean(hr_despues) ) /  sd_pooled)
tam_efecto = ( mean(hr_antes) - mean(hr_despues) ) / sd_pooled
tam_efecto
sd_pooled
sd_pooled = sqrt(((sd(hr_antes))^2 + (sd(hr_despues))^2))
sd_pooled
sd_pooled = sqrt(((sd(hr_antes))^2 + (sd(hr_despues))^2)/2)
sd_pooled
tam_efecto = ( mean(hr_antes) - mean(hr_despues) ) / sd_pooled
tam_efecto
tam_efecto = ( mean(hr_despues) - mean(hr_antes) ) / sd_pooled
tam_efecto
pwr.t.test(d="tam_efecto", sig.level=0.05, power=0.80, type="paired", alternative="greater")
pwr.t.test(d=tam_efecto, sig.level=0.05, power=0.80, type="paired", alternative="greater")
n.ejercicio = pwr.t.test(d=tam_efecto, sig.level=0.05, power=0.80, type="paired", alternative="greater")
n.ejercicio
ceiling(n.ejercicio$n)
if(Sys.info()[1]=="Linux"
Sys.info()
Sys.info()
install.packages("ggplot2", dependencies=TRUE)
n.1<-pwr.t.test(d=0.50, sig.level=0.05, power=0.80, type="one.sample",
alternative="two.sided")
install.packages("pwr", dependencies = TRUE)
library(pwr)
n.1<-pwr.t.test(d=(1/1.15), sig.level=0.05, power=0.80, type="two.sample",
alternative="two.sided")
n.1
ceiling(n.1$n)
pwr.t.test(d=0.5, sig.level=0.05, power=0.80, type="one.sample", alternative="greater")
pwr.t.test
ceiling(pwr.t.test$n)
pwr.t.test(d=0.5, sig.level=0.05, power=0.80, type="one.sample", alternative="greater")
pwr.t.test(d=0.5, sig.level=0.05, power=0.80, type="two.sample", alternative="greater")
pwr.t.test(d=0.5, sig.level=0.05, power=0.80, type="two.sample", alternative="greater")
muestra_manejo <-pwr.t.test(d=0.5, sig.level=0.05, power=0.80, type="two.sample", alternative="greater")
ceiling(muestra_manejo)
ceiling(muestra_manej$n)
ceiling(muestra_manejo$n)
muestreo_frec_cardiaca <- pwr.t.test(d=0.8, sig.level=0.05, power=0.80, type="paired", alternative="two.sided")
muestreo_frec_cardiaca
pwr.t.test(d = 0.8, sig.level = 0.05, type = "two.sample", alternative = "two.sided")
pwr.t.test(d = 0.8, sig.level = 0.05, type = "paired", alternative = "two.sided")
frecuencia_cardiaca <- pwr.t.test(d = 0.8, sig.level = 0.05, type = "paired", alternative = "two.sided")
muestreo_frec_cardiaca <- pwr.t.test(d=0.8, sig.level=0.05, power=0.80, type="paired", alternative="two.sided")
muestreo_frec_cardiaca
ceiling(muestreo_frec_cardiaca$n)
pwr.anova.test(k=3, n=24, f=0.10, sig.level=0.05)
pwr.anova.test(k=3, n=24, f=0.25, sig.level=0.05)
pwr.anova.test(k=3, n=24, f=0.40, sig.level=0.05)
print (i+5)
i <- 0
for (i in pob2){
print (i+5)
}
pob2 <- 1:200
pob2
i <- 0
for (i in pob2){
print (i+5)
}
print (i++)
print i++
print(i++)
print(i ++)
print(i +3)
pob2
print(i +3)
i <- 0
for (i in pob2){
print(i +3)
}
i <- 1
pob2 <- print(i*5)
for (i in pob2){
pob2 <- print(i*5)
}
pob2
pob2
pob2 <- 1:200
pob2
i <- 1  #Inicializamos i con valor de 1
sys.sample(pob2, 5)
sys.samp(pob2, 5)
sys.sample(120, 20)
# Tarea 1 Modelacion Ecologica
# Mauricio Nicol치s Arismendi Aedo
install.library("magrittr", dependencies = TRUE)
# Tarea 1 Modelacion Ecologica
# Mauricio Nicol치s Arismendi Aedo
install.package("magrittr", dependencies = TRUE)
# Tarea 1 Modelacion Ecologica
# Mauricio Nicol치s Arismendi Aedo
install.packages("magrittr", dependencies = TRUE)
install.packages("dplyr", dependencies = TRUE)
rm(list=ls())
install.packages("devtools", dependencies = TRUE)
library(devtools)
install_github("kamapu/Lexiguel")
library(Lexiguel)
data(rc_gaps)
data(rc_gaps.env)
rc_gaps
rc_gaps.env
rm(list=ls())
data(rc_gaps)
data(rc_gaps.env)
library(devtools)
library(Lexiguel)
data(rc_gaps)
data(rc_gaps.env)
summary(rc_gaps)
rc_gaps <- as.data.frame(rc_gaps)
str(rc_gaps)
str(rc_gaps.env)
summary(rc_gaps)
rc_gaps <- as.data.frame(rc_gaps)
str(rc_gaps)
str(rc_gaps.env)
rc_gaps.env
rc_gaps.env <- as.data.frame(rc_gaps.env)
summary(rc_gaps.env)
summary(rc_gaps)
rc_gaps.env$gaptype <- as.factor(rc_gaps.env$gaptype)
rc_gaps.env$rank.area <- as.factor(rc_gaps.env$rank.area)
#ordenamos con nombre los gaptypes
levels(rc_gaps.env$gaptype) <- c("No invadido", "tratado", "invadido")
#rikeza
rc_gaps$riq <- rowSums(rc_gaps)
rc_gaps$riq
#Descriptive statistics
summary(rc_gaps)
summary(rc_gaps.env)
tapply(rc_gaps.env$area, rc_gaps.env$gaptype, summary)
tapply(rc_gaps.env$area, rc_gaps.env$gaptype, sd)
tapply(rc_gaps.env$area, rc_gaps.env$gaptype, var)
tapply(rc_gaps.env$riq, rc_gaps.env$gaptype, summary)
tapply(rc_gaps.env$riq, rc_gaps.env$gaptype, sd)
tapply(rc_gaps.env$riq, rc_gaps.env$gaptype, var)
Invadido <- subset(rc_gaps.env, gaptype == "invadido")
Tratado <- subset(rc_gaps.env, gaptype == "tratado")
noInvadido <- subset(rc_gaps.env, gaptype == "No invadido")
library(vegan)
H <- diversity(rc_gaps$riq)
H
J <- H/log(specnumber(rc_gaps$riq))
J
rm(list=ls())
#setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea6") #windows
setwd(/home/)
#setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea6") #windows
setwd(/Home/)
#setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea6") #windows
setwd("/home")
list.files()
#setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea6") #windows
setwd("/home/mauricio")
list.files()
db <- read.csv("Recicla_ufro_3.csv", header = TRUE, sep = ",")
#setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea6") #windows
setwd("/home/mauricio")
list.files()
#setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea6") #windows
setwd("/home/mauricio/Documents")
list.files()
#setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea6") #windows
setwd("/home/mauricio/Documents/ModelacionEcologica")
list.files()
#setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea6") #windows
setwd("/home/mauricio/Documents/ModelacionEcologica/Tarea6")
list.files()
db <- read.csv("Recicla_ufro_3.csv", header = TRUE, sep = ",")
str(db)
head(db)
tail(db)
db$Recicle[db$Recicle == "1"] <- "SI RECICLA"
db$Recicle[db$Recicle == "0"] <- "NO RECICLA"
str(db)
library("party")
# 1) Caracterice atributos b치sicos de personas encuestadas comparando quienes reciclan (i.e., separan
#    para reciclar) y quienes no reciclan en la UFRO.
tapply(db)
View(db)
table(db$Asociativity, db$Recicle)
table(db$Nature.Experience, db$Recicle)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"))
barplot(table(db$Nature.Experience, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"))
chi_square <- chisq.test(db$Asociativity, db$Recicle)
print(chi_square)
anova_result <- aov(Age ~ Recicle, data = db)
boxplot(db$Age ~ db$Recicle, xlab = "Recicla", ylab = "Edad", col = c("red", "green"), names = c("No Recicla", "Recicla"))
table_data <- table(db$Degree.studies, db$Recicle)
barplot(table_data, beside = TRUE, legend = TRUE, col = c("red", "green"),
names = c("Pregrado", "Postgrado"),
main = "Reciclaje por Nivel de Estudios")
table(db$Asociativity, db$Recicle)
table(db$Nature.Experience, db$Recicle)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"))
table(db$Asociativity, db$Recicle)
table(db$Nature.Experience, db$Recicle)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"))
table(db$Exercise, db$Recicle)
table(db$Etnia, db$Recicle)
table(db$Gender, db$Recicle)
table(db$Spirituality, db$Recicle)
table(db$Degree.studies, db$Recicle)
table(db$Faculty, db$Recicle)
table(db$Advance.years, db$Recicle)
table(db$Gender, db$Recicle)
db$Etnia[db$Etnia == "1"] <- "SI PERTENECE"
db$Etnia[db$Etnia == "0"] <- "NO PERTENECE"
db$Spirituality[db$Spirituality == "1"] <- "SI PRACTICA"
db$Spirituality[db$Spirituality == "0"] <- "NO PRACTICA"
db$Exercise[db$Exercise == "1"] <- "2-3 VECES X SEMANA"
db$Exercise[db$Exercise == "0"] <- "NO REALIZA"
db$Recicle[db$Recicle == "1"] <- "SI RECICLA"
db$Recicle[db$Recicle == "0"] <- "NO RECICLA"
db$Etnia[db$Etnia == "1"] <- "SI PERTENECE"
db$Etnia[db$Etnia == "0"] <- "NO PERTENECE"
db$Spirituality[db$Spirituality == "1"] <- "SI PRACTICA"
db$Spirituality[db$Spirituality == "0"] <- "NO PRACTICA"
db$Exercise[db$Exercise == "1"] <- "2-3 VECES X SEMANA"
db$Exercise[db$Exercise == "0"] <- "NO REALIZA"
db$Asociativity[db$Asociativity == "1"] <- "SI PARTICIPA"
db$Asociativity[db$Asociativity == "0"] <- "NO PARTICIPA"
db$Nature.Experience[db$Nature.Experience == "1"] <- "SI"
db$Nature.Experience[db$Nature.Experience == "0"] <- "NO POSEE APEGO"
db$Degree.studies[db$Degree.studies == "0"] <- "PREGRADO"
db$Degree.studies[db$Degree.studies == "1"] <- "POSTGRADO"
str(db)
library("party")
table(db$Gender, db$Recicle)
table(db$Etnia, db$Recicle)
table(db$Spirituality, db$Recicle)
table(db$Exercise, db$Recicle)
table(db$Asociativity, db$Recicle)
table(db$Nature.Experience, db$Recicle)
table(db$Degree.studies, db$Recicle)
table(db$Faculty, db$Recicle)
table(db$Advance.years, db$Recicle)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"))
barplot(table(db$Nature.Experience, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"))
barplot(table_data, beside = TRUE, legend = TRUE, col = c("red", "green"),
names = c("Pregrado", "Postgrado"),
main = "Reciclaje por Nivel de Estudios")
barplot(table_data, beside = TRUE, legend = TRUE, col = c("red", "green"),
names = c("Pregrado", "Postgrado"),
main = "Reciclaje por Nivel de Estudios")
table_data <- table(db$Degree.studies, db$Recicle)
barplot(table_data, beside = TRUE, legend = TRUE, col = c("red", "green"),
names = c("Pregrado", "Postgrado"),
main = "Reciclaje por Nivel de Estudios")
barplot(table_data, beside = TRUE, legend = TRUE, col = c("red", "green"),
names = c("Pregrado", "Postgrado"),
main = "Reciclaje por Nivel de Estudios")
barplot(table_data, beside = TRUE, legend = TRUE, col = c("red", "green"),
names = c("Pregrado", "Postgrado"), cex.names = 0.7, las = 2,
main = "Reciclaje por Nivel de Estudios")
barplot(table_data, beside = TRUE, legend = TRUE, col = c("red", "green"),
names = c("Pregrado", "Postgrado"), cex.names = 0.1, las = 2,
main = "Reciclaje por Nivel de Estudios")
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"))
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 2)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 4)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 3)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 1)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 0)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 0)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 0, main = Asociacion)
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 0, main = "Asociacion")
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 0, main = "Asociacion", )
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = -5, main = "Asociacion", )
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = -2, main = "Asociacion", )
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = -1, main = "Asociacion", )
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), las = 3, main = "Asociacion", )
barplot(table(db$Nature.Experience, db$Recicle), beside = TRUE, legend = FALSE, col = c("red", "green"))
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = FALSE, col = c("red", "green"), , main = "Asociacion", )
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), , main = "Asociacion", )
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Asociacion", )
table(db$Advance.years, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por a침o que cursa")
barplot(table(db$Gender, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por G칠nero", )
barplot(table(db$Gender, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green", "black"), main = "Reciclantes por G칠nero", )
barplot(table(db$Faculty, db$Recicle), , beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Facultad")
barplot(table(db$Faculty, db$Recicle), , beside = TRUE, legend = TRUE, col = c("red", "green", "black", "blue"), main = "Reciclantes por Facultad")
barplot(table(db$Faculty, db$Recicle), , beside = TRUE, legend = TRUE, col = c("red", "green", "black", "blue", "yellow"), main = "Reciclantes por Facultad")
barplot(table(db$Faculty, db$Recicle), , beside = TRUE, legend = TRUE, col = c("red", "green", "black", "blue", "yellow", "brown"), main = "Reciclantes por Facultad")
barplot(table(db$Faculty, db$Recicle), , beside = TRUE, legend = TRUE, col = c("red", "green", "black", "blue", "yellow", "brown", "orange"), main = "Reciclantes por Facultad")
barplot(table(db$Faculty, db$Recicle), , beside = TRUE, legend = TRUE, col = c("red", "green", "black", "blue", "yellow", "brown", "orange"), main = "Reciclantes por Facultad")
barplot(table(db$Faculty, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green", "black", "blue", "yellow", "brown", "orange"), main = "Reciclantes por Facultad")
barplot(table(db$Gender, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green", "black"), main = "Reciclantes por G칠nero", )
barplot(table(db$Gender, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green", "black"), main = "Reciclantes por G칠nero", )
barplot(table(db$Gender, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green", "black"), main = "Reciclantes por G칠nero", )
barplot(table(db$Etnia, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Etnia")
barplot(table(db$Spirituality, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Espiritualidad")
barplot(table(db$Exercise, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Cantidad de Ejercicio")
barplot(table(db$Exercise, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Cantidad de Ejercicio")
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Etnia")
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Etnia")
barplot(table(db$Etnia, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Etnia")
barplot(table(db$Spirituality, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Espiritualidad")
barplot(table(db$Asociativity, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Pertenencia a una Agrupaci칩n")
barplot(table(db$Nature.Experience, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por Cercan칤a a la Naturaleza")
barplot(table(db$Degree.studies, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes si tienen Posgrado")
barplot(table(db$Faculty, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green", "black", "blue", "yellow", "brown", "orange"), main = "Reciclantes por Facultad")
barplot(table(db$Advance.years, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Reciclantes por a침o que cursa")
barplot(table(db$Advance.years, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green", "black", "blue", "yellow", "brown", "orange"), main = "Reciclantes por a침o que cursa")
barplot(table(db$Advance.years, db$Recicle), beside = TRUE, legend = TRUE, col = c("red", "green", "black", "blue", "yellow", "brown", "orange", "pink", "white"), main = "Reciclantes por a침o que cursa")
dbEspanol <- db  # Asegur칠monos de no modificar el dataframe original
names(dbEspanol) <- c("Edad", "Genero", "Etnia", "Espiritualidad", "Ejercicio",
"Asociatividad", "Experiencia_Rural", "Nivel_Estudios",
"Facultad", "Anios_Avance", "Recicla")
str(dbEspanol)
formula_recicle <- Recicle ~ Gender + Etnia + Spirituality + Exercise +
Asociativity + Nature.Experience + Degree.studies +
Faculty + Advance.years
arbol_clasificacion <- ctree(formula_recicle, data = db)
formula_recicle <- Recicle ~ Gender + Etnia + Spirituality + Exercise +
Asociativity + Nature.Experience + Degree.studies +
Faculty + Advance.years|
arbol_clasificacion <- ctree(formula_recicle, data = db)
summary(db)
#setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea6") #windows
setwd("/home/mauricio/Documents/ModelacionEcologica/Tarea6")
list.files()
db <- read.csv("Recicla_ufro_3.csv", header = TRUE, sep = ",")
str(db)
head(db)
tail(db)
db$Recicle[db$Recicle == "1"] <- "SI RECICLA"
db$Recicle[db$Recicle == "0"] <- "NO RECICLA"
dbEspanol <- db  # Asegur칠monos de no modificar el dataframe original
names(dbEspanol) <- c("Edad", "Genero", "Etnia", "Espiritualidad", "Ejercicio",
"Asociatividad", "Experiencia_Rural", "Nivel_Estudios",
"Facultad", "Anios_Avance", "Recicla")
str(dbEspanol)
formula_recicle <- Recicle ~ Gender + Etnia + Spirituality + Exercise +
Asociativity + Nature.Experience + Degree.studies +
Faculty + Advance.years|
arbol_clasificacion <- ctree(formula_recicle, data = db)
summary(db)
class(db)
class(db$Age)
class(db$Gender)
class(db$Etnia)
summary(db$Spirituality)
class(db$Spirituality)
class(db$Exercise)
class(db$Asociativity)
class(db$Nature.Experience)
class(db$Degree.studies)
class(db$Faculty)
class(db$Advance.years)
class(db$Recicle)
X <- db[, c('Age', 'Gender', 'Etnia', 'Spirituality', 'Exercise', 'Asociativity', 'Nature.Experience', 'Degree.studies')]
y <- db$Recicle
X$Gender <- as.factor(X$Gender)
X$Degree.studies <- as.factor(X$Degree.studies)
model <- ctree(Recicle ~ ., data = data)
model <- ctree(Recicle ~ ., data = db)
dbEspanol <- db  # Asegur칠monos de no modificar el dataframe original
names(dbEspanol) <- c("Edad", "Genero", "Etnia", "Espiritualidad", "Ejercicio",
"Asociatividad", "Experiencia_Rural", "Nivel_Estudios",
"Facultad", "Anios_Avance", "Recicla")
data$Gender <- as.factor(data$Gender)
db$Gender <- as.factor(data$Gender)
db$Gender <- as.factor(db$Gender)
db$Degree.studies <- as.factor(db$Degree.studies)
# Si hay variables que son caracteres pero deber칤an ser num칠ricas, convi칠rtelas
db$Advance.years <- as.numeric(data$Advance.years)
# Si hay variables que son caracteres pero deber칤an ser num칠ricas, convi칠rtelas
db$Advance.years <- as.numeric(db$Advance.years)
# Crear el modelo de 치rbol de decisi칩n utilizando ctree
model <- ctree(Recicle ~ ., data = db)
# Si hay variables que son caracteres pero deber칤an ser num칠ricas, convi칠rtelas
db$Advance.years <- as.numeric(db$Advance.years)
# Crear el modelo de 치rbol de decisi칩n utilizando ctree
model <- ctree(Recicle ~ ., data = db)
# Si hay variables que son caracteres pero deber칤an ser num칠ricas, convi칠rtelas
db$Advance.years <- as.numeric(db$Advance.years)
# Crear el modelo de 치rbol de decisi칩n utilizando ctree
model <- ctree(Recicle ~ ., data = db)
summary(db)
data$Advance.years <- as.numeric(as.character(data$Advance.years))
dbEspanol$Etnia[database$Etnia=="1"] <- "SI"
dbEspanol$Etnia[dbEspanol$Etnia=="1"] <- "SI"
dbEspanol$Etnia[dbEspanol$Etnia=="0"] <- "NO"
dbEspanol$Espiritualidad[dbEspanol$Espiritualidad=="1"] <- "SI"
dbEspanol$Espiritualidad[dbEspanol$Espiritualidad=="0"] <- "NO"
db$Recicle[db$Recicle == "1"] <- "SI RECICLA"
db$Recicle[db$Recicle == "0"] <- "NO RECICLA"
db$Etnia[db$Etnia == "1"] <- "SI PERTENECE"
db$Etnia[db$Etnia == "0"] <- "NO PERTENECE"
db$Spirituality[db$Spirituality == "1"] <- "SI PRACTICA"
db$Spirituality[db$Spirituality == "0"] <- "NO PRACTICA"
db$Exercise[db$Exercise == "1"] <- "2-3 VECES X SEMANA"
db$Exercise[db$Exercise == "0"] <- "NO REALIZA"
db$Asociativity[db$Asociativity == "1"] <- "SI PARTICIPA"
db$Asociativity[db$Asociativity == "0"] <- "NO PARTICIPA"
db$Nature.Experience[db$Nature.Experience == "1"] <- "SI"
db$Nature.Experience[db$Nature.Experience == "0"] <- "NO POSEE APEGO"
db$Degree.studies[db$Degree.studies == "0"] <- "PREGRADO"
db$Degree.studies[db$Degree.studies == "1"] <- "POSTGRADO"
dbEspanol <- db  # Asegur칠monos de no modificar el dataframe original
names(dbEspanol) <- c("Edad", "Genero", "Etnia", "Espiritualidad", "Ejercicio",
"Asociatividad", "Experiencia_Rural", "Nivel_Estudios",
"Facultad", "Anios_Avance", "Recicla")
dbEspanol$Genero <- as.factor(dbEspanol$Genero)
dbEspanol$Etnia <- as.factor(dbEspanol$Etnia)
dbEspanol$Espiritualidad <- as.factor(dbEspanol$Espiritualidad)
dbEspanol$Ejercicio <- as.factor(dbEspanol$Ejercicio)
dbEspanol$Asociatividad <- as.factor(dbEspanol$Asociatividad)
dbEspanol$Experiencia_Rural <- as.factor(dbEspanol$Experiencia_Rural)
dbEspanol$Nivel_Estudios <- as.factor(dbEspanol$Nivel_Estudios)
dbEspanol$Recicla <- as.factor(db$Recicla)
dbEspanol$Recicla <- as.factor(dbEspanol$Recicla)
dbEspanol$Facultad <- as.factor(dbEspanol$Facultad)
dbEspanol$Anios_Avance <- as.factor(dbEspanol$Anios_Avance)
dbEspanol$Anios_Avance <- as.integer(dbEspanol$Anios_Avance)
str(dbEspanol)
dbEspanol <- db  # Asegur칠monos de no modificar el dataframe original
names(dbEspanol) <- c("Edad", "Genero", "Etnia", "Espiritualidad", "Ejercicio",
"Asociatividad", "Experiencia_Rural", "Nivel_Estudios",
"Facultad", "Anios_Avance", "Recicla")
dbEspanol$Genero <- as.factor(dbEspanol$Genero)
dbEspanol$Etnia <- as.factor(dbEspanol$Etnia)
dbEspanol$Espiritualidad <- as.factor(dbEspanol$Espiritualidad)
dbEspanol$Ejercicio <- as.factor(dbEspanol$Ejercicio)
dbEspanol$Asociatividad <- as.factor(dbEspanol$Asociatividad)
dbEspanol$Experiencia_Rural <- as.factor(dbEspanol$Experiencia_Rural)
dbEspanol$Nivel_Estudios <- as.factor(dbEspanol$Nivel_Estudios)
dbEspanol$Recicla <- as.factor(dbEspanol$Recicla)
dbEspanol$Facultad <- as.factor(dbEspanol$Facultad)
dbEspanol$Anios_Avance <- as.integer(dbEspanol$Anios_Avance)
str(dbEspanol)
datosArbol <- dbEspanol[c("Edad", "Genero", "Etnia", "Espiritualidad", "Ejercicio", "Asociatividad", "Experiencia_Rural", "Nivel_Estudios", "Recicla", "Facultad", "Anios_Avance")]
arbol1 <- ctree(Recicla~., data=dbEspanol)
plot(arbol1, drop=F, main= "Arbol de Clasificaci칩n")
