str(dune)
str(dune.env)
head(dune)
colnames(dune)
str(dune)
head(dune)
tail(dune)
#1
#Profundidad horizonte A suelos respecto a especies y tipo de uso de suelos
#dune.env$A1
#plot(table(dune.env$A1, dune.env$Use), beside = TRUE, legend = TRUE, col = c("red", "green"), main = "Tamaño horizonte A por uso")
?dune.env
?dune
plot(dune.env$Use, dune.env$A1, main = "Profundidad Horizonte A, respecto a Uso de Suelo", xlab = "Uso de Suelo", ylab = "Profundidad de Horizonte A")
plot(dune.env$Management, dune.env$A1, main = "Profundidad Horizonte A, respecto a manejo", xlab = "Tipo de Manejo", ylab = "Profundidad Horizonte A")
rikeza <- replace(dune[,0:30], dune[,0:30] >0, 1 )
rikeza$Riq <- rowSums(rikeza)
str(rikeza)
head(rikeza)
dune.env$riq <- rikeza$Riq
Agricultura_Biologica <- rep("Agricultura Biologica", SF)
Agricultura_Biologica <- rep("Agricultura Biologica", dune.env$Management == SF)
Agricultura_Biologica <- rep("Agricultura Biologica", dune.env$Management == "BF")
Agricultura_Biologica <- rep("Agricultura Biologica", dune.env$Management = "BF")
plot(dune.env$Use, dune.env$riq, main = "Riqueza respecto a Manejo", xlab = "")
plot(dune.env$Management, dune.env$riq, main = "Riqueza respecto a Manejo", xlab = "Tipo de Manejo", ylab = "Riqueza de especies")
plot(dune.env$Use, dune.env$riq, main = "Riqueza respecto a Uso de suelo", xlab = "Uso de suelo", ylab = "Riqueza de especies")
plot(dune.env$Use, dune.env$A1, main = "Profundidad Horizonte A, respecto a Uso de Suelo", xlab = "Uso de Suelo", ylab = "Profundidad de Horizonte A")
plot(dune.env$Management, dune.env$A1, main = "Profundidad Horizonte A, respecto a manejo", xlab = "Tipo de Manejo", ylab = "Profundidad Horizonte A")
?dune.env
plot(dune.env$Manure, dune.env$A1, main = "Profundidad Horizonte A, respecto a manejo", xlab = "Tipo de Manejo", ylab = "Profundidad Horizonte A")
plot(dune.env$Manure, dune.env$A1, main = "Profundidad Horizonte A, respecto a Cantidad de uso de Estiercol", xlab = "Cantidad de Estiercol", ylab = "Profundidad Horizonte A")
plot(dune.env$Management, dune.env$riq, main = "Riqueza respecto a Manejo", xlab = "Tipo de Manejo", ylab = "Riqueza de especies")
plot(dune.env$Manure, dune.env$riq, main = "Riqueza respecto a Cantidad de uso de Estiercol", xlab = "Cantidad de uso de Estiercol", ylab = "Riqueza de especies")
View(dune.env)
tapply(dune.env$Riq, summary)
tapply(dune.env$Riq, dune.env$Management, summary)
tapply(dune.env$Management, dune.env$Riq, summary)
tapply(dune.env$Use, dune, summary)
tapply(dune, dune.env$Use, summary)
?sample_n
plot(dune.env$Use, dune.env$A1, main = "Profundidad Horizonte A, respecto a Uso de Suelo", xlab = "Uso de Suelo", ylab = "Profundidad de Horizonte A")
duneHF <- subset(dune.env, Use == "HF" )
duneHP <- subset(dune.env, Use == "HP")
View(duneHF)
View(dune)
View(dune.env)
duneHF <- subset(dune.env, Use == "Hayfield" )
duneHP <- subset(dune.env, Use == "Haypasture")
duneHP <- subset(dune.env, Use == "Haypastu")
duneP <- subset(dune.env, Use == "Pasture")
str(duneHF)
STR(duneHP)
str(duneHP)
str(duneP)
summary(duneHF)
summary(duneHP)
summary(duneP)
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
?sample_n
HFnew <- sample_n(duneHF, size = 5)
HPnew <- sample_n(duneHP, size = 5)
Pnew <- sample_n(duneP, size = 5)
plot(dune.env$Use, dune.env$A1, main = "Profundidad Horizonte A, respecto a Uso de Suelo", xlab = "Uso de Suelo", ylab = "Profundidad de Horizonte A")
plot(dune.env$Management, dune.env$A1, main = "Profundidad Horizonte A, respecto a manejo", xlab = "Tipo de Manejo", ylab = "Profundidad Horizonte A")
plot(dune.env$Manure, dune.env$A1, main = "Profundidad Horizonte A, respecto a Cantidad de uso de Estiercol", xlab = "Cantidad de Estiercol", ylab = "Profundidad Horizonte A")
plot(dune.env$Use, dune.env$riq, main = "Riqueza respecto a Uso de suelo", xlab = "Uso de suelo", ylab = "Riqueza de especies")
plot(dune.env$Management, dune.env$riq, main = "Riqueza respecto a Manejo", xlab = "Tipo de Manejo", ylab = "Riqueza de especies")
plot(dune.env$Manure, dune.env$riq, main = "Riqueza respecto a Cantidad de uso de Estiercol", xlab = "Cantidad de uso de Estiercol", ylab = "Riqueza de especies")
union <- rbind(HFnew, HPnew, Pnew)
head(union)
tail(union)
#NMDS
library(vegan)
colnames(dune)
source("~/GitHub/ModelacionEcologica/Tarea7/Tarea7.R", echo=TRUE)
install.packages("dplyr")
colnames(dune.env)
colnames(union)
dune.envHF <- subset(dune.env, Use == "Hayfield")
dune.envHP <- subset(dune.env, Use == "Haypastu")
dune.envP <- subset(dune.env, Use == "Pasture")
HFnew.env <- sample_n(dune.envHF, size = 5)
HPnew.env <- sample_n(dune.envHP, size = 5)
Pnew.env <- sample_n(dune.envP, size = 5)
library(dplyr)
HFnew.env <- sample_n(dune.envHF, size = 5)
HPnew.env <- sample_n(dune.envHP, size = 5)
Pnew.env <- sample_n(dune.envP, size = 5)
union.env <- rbind(HFnew.env, HPnew.env, Pnew.env)
colnames(union.env)
dune.envHF <- subset(dune.env, Use == "Hayfield")
dune.envHF <- subset(dune, Use == "Hayfield")
dune$Use <- dune.env$Use
duneSP.HF <- subset(dune, Use == "Hayfield")
duneSP.HP <- subset(dune, Use == "Haypastu")
duneSP.P <- subset(dune, Use == "Pasture")
HFnewSP <- sample_n(duneSP.HF, size = 5)
HPnewSP <- sample_n(duneSP.HP, size = 5)
PnewSP <- sample_n(duneSP.P, size = 5)
unionSP <- rbind(HFnewSP, HPnewSP, PnewSP)
unionSP
colnames(unionSP)
meta5 <- metaMDS(unionSP[,1:30], distance = "bray", k = 5, trymax = 1000,
wascores = T, autotransform = F, noshare = 1)
library(vegan)
meta5 <- metaMDS(unionSP[,1:30], distance = "bray", k = 5, trymax = 1000,
wascores = T, autotransform = F, noshare = 1)
plot(meta5, main = "Composición florística")
text(meta5, display = "sites", col = "blue", cex = 0.5)
text(meta5, display = "species", col = "red", cex = 0.5)
meta4 <- metaMDS(unionSP[,1:30], distance = "bray", k = 4, trymax = 20,
wascores = F, autotrasform = F, noshare = 1)
plot(meta4, main = "Composición florística")
text(meta4, display = "sites", col = "blue", cex = 0.5)
text(meta4, display = "species", col = "red", cex = 0.5)
meta4 <- metaMDS(unionSP[,1:30], distance = "bray", k = 4, trymax = 20,
wascores = T, autotrasform = F, noshare = 1)
plot(meta4, main = "Composición florística")
text(meta4, display = "sites", col = "blue", cex = 0.5)
text(meta4, display = "species", col = "red", cex = 0.5)
?metaMDS
meta4 <- metaMDS(unionSP[,1:30], distance = "bray", k = 4, trymax = 20,
wascores = T, autotrasform = F, noshare = 1, plot = TRUE)
meta4 <- metaMDS(unionSP[,1:30], distance = "bray", k = 4, trymax = 20,
wascores = T, autotrasform = F, noshare = 1)
plot(meta4, main = "Composición florística")
text(meta4, display = "sites", col = "blue", cex = 0.5)
text(meta4, display = "species", col = "red", cex = 0.5)
meta5 <- metaMDS(unionSP[,1:30], distance = "bray", k = 5, trymax = 1000,
wascores = T, autotransform = F, noshare = 1)
meta4 <- metaMDS(unionSP[,1:30], distance = "bray", k = 4, trymax = 1000,
wascores = T, autotrasform = F, noshare = 1)
meta3 <- metaMDS(unionSP[,1:30], distance = "bray", k = 3, trymax = 1000, wascores = F,
autotrasform = F, noshare = 1)
meta2 <- metaMDS(unionSP[,1:30], distance = "bray", k = 2, trymax = 1000, wascores = F, autotrasform = F, noshare = 1)
meta1 <- metaMDS(unionSP[,1:30], distance = "bray", k = 1, trymax = 1000, wascores = F, autotrasform = F, noshare = 1)
meta5 <- metaMDS(unionSP[,1:30], distance = "bray", k = 5, trymax = 1000,
wascores = T, autotransform = F, noshare = 1)
plot(meta5, main = "Composición florística")
text(meta5, display = "sites", col = "blue", cex = 0.5)
text(meta5, display = "species", col = "red", cex = 0.5)
meta5
par(mfrow=c(1,3))
stressplot(meta5)
stressplot(meta4)
stressplot(meta3)
par(mfrow=c(1,2))
stressplot(meta2)
stressplot(meta1)
par(mfrow=c(1,3))
stressplot(meta5)
stressplot(meta4)
stressplot(meta3)
par(mfrow=c(1,2))
stressplot(meta2)
stressplot(meta1)
plot(c(5:1),c( meta5$stress, meta4$stress, meta3$stress,
meta2$stress, meta1$stress), pch=20, col="red", ylab="Stress (%)",
xlab="Nr dimensiones")
lines(c(5:1), c(meta5$stress, meta4$stress, meta3$stress, meta2$stress, meta1$stress),
add=T, lty=1, col="blue")
plot(c(5:1),c( meta5$stress, meta4$stress, meta3$stress,
meta2$stress, meta1$stress), pch=20, col="red", ylab="Stress (%)",
xlab="Nr dimensiones")
lines(c(5:1), c(meta5$stress, meta4$stress, meta3$stress, meta2$stress, meta1$stress),
add=T, lty=1, col="blue")
plot(c(5:1),c( meta5$stress, meta4$stress, meta3$stress,
meta2$stress, meta1$stress), pch=20, col="red", ylab="Stress (%)",
xlab="Nr dimensiones")
lines(c(5:1), c(meta5$stress, meta4$stress, meta3$stress, meta2$stress, meta1$stress),
add=T, lty=1, col="blue")
metaf <- metaMDS(unionSP[,1:30], distance = "bray", k = 2,
trymax = 1000, wascores = T,
autotrasform = F,  noshare = 1)
plot(metaf)
plot(metaf,main="Composición florística dunas")
text(metaf, display = "sites", col="blue", cex=0.5)# "sites"/ # En azul los sitios o parcelas
text(metaf, display = "species", col="blue", cex=0.5)# "sites"/En azul las spp
plot(metaf)
plot(metaf,main="Composición florística dunas")
plot(dune.env$Use, dune.env$A1, main = "Profundidad Horizonte A, respecto a Uso de Suelo", xlab = "Uso de Suelo", ylab = "Profundidad de Horizonte A")
metaf <- metaMDS(unionSP[,1:30], distance = "bray", k = 2,
trymax = 1000, wascores = T,
autotrasform = F,  noshare = 1)
plot(metaf)
plot(metaf,main="Composición florística dunas")
text(metaf, display = "sites", col="blue", cex=0.5)# "sites"/ # En azul los sitios o parcelas
text(metaf, display = "species", col="red", cex=0.5)# "sites"/En azul las spp
plot(metaf)
plot(metaf)
plot(metaf,main="Composición florística dunas")
text(metaf, display = "sites", col="blue", cex=0.5)# "sites"/ # En azul los sitios o parcelas
text(metaf, display = "species", col="red", cex=0.5)# "sites"/En azul las spp
plot(metaf)
plot(c(5:1),c( meta5$stress, meta4$stress, meta3$stress,
meta2$stress, meta1$stress), pch=20, col="red", ylab="Stress (%)",
xlab="Nr dimensiones")
lines(c(5:1), c(meta5$stress, meta4$stress, meta3$stress, meta2$stress, meta1$stress),
add=T, lty=1, col="blue")
plot(dune.env$Use, dune.env$A1, main = "Profundidad Horizonte A, respecto a Uso de Suelo", xlab = "Uso de Suelo", ylab = "Profundidad de Horizonte A")
plot(dune.env$Management, dune.env$A1, main = "Profundidad Horizonte A, respecto a manejo", xlab = "Tipo de Manejo", ylab = "Profundidad Horizonte A")
plot(dune.env$Manure, dune.env$A1, main = "Profundidad Horizonte A, respecto a Cantidad de uso de Estiercol", xlab = "Cantidad de Estiercol", ylab = "Profundidad Horizonte A")
plot(metaf)
plot(metaf,main="Composición florística dunas")
text(metaf, display = "sites", col="blue", cex=0.5)# "sites"/ # En azul los sitios o parcelas
text(metaf, display = "species", col="red", cex=0.5)# "sites"/En azul las spp
par(mfrow=c(1,3))
stressplot(meta5)
stressplot(meta4)
stressplot(meta3)
par(mfrow=c(1,2))
stressplot(meta2)
stressplot(meta1)
par(False)
par(mfrow=c(1))
par(mfrow=c(1,1))
plot(c(5:1),c( meta5$stress, meta4$stress, meta3$stress,
meta2$stress, meta1$stress), pch=20, col="red", ylab="Stress (%)",
xlab="Nr dimensiones")
lines(c(5:1), c(meta5$stress, meta4$stress, meta3$stress, meta2$stress, meta1$stress),
add=T, lty=1, col="blue")
metaf <- metaMDS(unionSP[,1:30], distance = "bray", k = 2,
trymax = 1000, wascores = T,
autotrasform = F,  noshare = 1)
plot(metaf)
plot(metaf,main="Composición florística dunas")
text(metaf, display = "sites", col="blue", cex=0.5)# "sites"/ # En azul los sitios o parcelas
text(metaf, display = "species", col="red", cex=0.5)# "sites"/En azul las spp
plot(metaf)
plot(metaf,main="Composición florística dunas")
ordihull(metaf, env$PnNac, show="1",col = "black", lty=4, lwd=2) #Huerquehue
ordihull(metaf, unionSP$Use, show="1",col = "black", lty=4, lwd=2) #Huerquehue
ordihull(metaf, unionSP$Use, show="1",col = "black", lty=4, lwd=2) #Huerquehue
ordihull(metaf, unionSP$Use, show="2",col = "red", lty=4, lwd=2) # Villarrica
ordihull(metaf, unionSP$Use, show="3",col = "green", lty=4, lwd=2) # Conguillio
ordihull(metaf, dune$Use, show="1",col = "black", lty=4, lwd=2) #Huerquehue
ordihull(metaf, dune$Use, show="2",col = "red", lty=4, lwd=2) # Villarrica
ordihull(metaf, dune$Use, show="3",col = "green", lty=4, lwd=2) # Conguillio
View(unionSP)
ordihull(metaf, unionSP$Use, show="1",col = "black", lty=4, lwd=2) #Huerquehue
ordihull(metaf, unionSP$Use, show="Pasture",col = "black", lty=4, lwd=2) #Huerquehue
ordihull(metaf, dune$Use, show="Haypasture",col = "red", lty=4, lwd=2) # Villarrica
ordihull(metaf, unionSP$Use, show="Haypasture",col = "red", lty=4, lwd=2) # Villarrica
ordihull(metaf, unionSP$Use, show="Hayfield",col = "green", lty=4, lwd=2) # Conguillio
ordihull(metaf, unionSP$Use, show="Pasture",col = "black", lty=4, lwd=2)
ordihull(metaf, unionSP$Use, show="Haypasture",col = "red", lty=4, lwd=2)
ordihull(metaf, unionSP$Use, show="Hayfield",col = "green", lty=4, lwd=2)
ordihull(metaf, unionSP$Use, show="Haypasture",col = "chocolate", lty=4, lwd=2)
ordihull(metaf, unionSP$Use, show="Haypastuure",col = "chocolate", lty=4, lwd=2)
ordihull(metaf, unionSP$Use, show="Haypastu",col = "chocolate", lty=4, lwd=2)
text(metaf, display = "species", col="red", cex=0.5)# "sites"/En azul las spp
text(metaf, display = "sites", col="blue", cex=0.5)# "sites"/ # En azul los sitios o parcelas
View(union)
fit <- envfit(metaf, union[,c( "Moisture", "Management","Manure","A1", "riq")], permutations = 99, display = "sites")
fit
plot(metaf, display=c("species", "sites"))
plot(fit)
fit <- envfit(metaf, union[,c( "A1", "riq")], permutations = 99, display = "sites")
fit
?metaMDS
plot(metaf, display=c("species", "sites"))
plot(fit)
?fit
rm(list = ls())
library(spatstat)
aleatorio <- rpoispp(lambda = 4, win = owin(c(0,14), c(0,20)))
aleatorio
plot(aleatorio)
env.rand<-envelope(aleatorio, pcf, nsim=99, correction="isotropic",
r=seq(0, 4, by=0.1))
env.rand
plot(env.rand, ylim=c(0.5,2), xlim=c(0,4), las=1, main="PCF patron aleatorio",
legend=TRUE)
aleatorio
plot(aleatorio)
plot(random, pch=0.6, cex=0.5, main="Patrón Aleatorio")
plot(aleatorio, pch=0.6, cex=0.5, main="Patrón Aleatorio")
plot(aleatorio, pch=1, cex=1, main="Patrón Aleatorio")
plot(aleatorio, pch=1, cex=0.1, main="Patrón Aleatorio")
plot(aleatorio, pch=1, cex=0.2, main="Patrón Aleatorio")
plot(aleatorio, pch=0.1, cex=0.2, main="Patrón Aleatorio")
?pch
plot(aleatorio, pch=19, cex=0.2, main="Patrón Aleatorio")
plot(aleatorio, pch=19, cex=0.5, main="Patrón Aleatorio")
plot(aleatorio, pch=19, cex=1, main="Patrón Aleatorio")
env.rand<-envelope(aleatorio, pcf, nsim=99, correction="isotropic",
r=seq(0, 4, by=0.1))
plot(aleatorio, pch=19, cex=0.5, main="Patrón Aleatorio")
summary(aleatorio)
?envelope
env.rand<-envelope(aleatorio, pcf, nsim=99, correction="isotropic",
r=seq(0, 7, by=0.1))
?envelope
plot(env.rand, ylim=c(0.5,2), xlim=c(0,4), las=1, main="PCF patron aleatorio",
legend=TRUE)
?envelope
env.rand<-envelope(aleatorio, pcf, nsim=99, correction="border",
r=seq(0, 7, by=0.1))
env.rand<-envelope(aleatorio, pcf, nsim=99, correction="rs",
r=seq(0, 7, by=0.1))
env.rand<-envelope(aleatorio, pcf, nsim=99, correction="translate",
r=seq(0, 7, by=0.1))
plot(env.rand, ylim=c(0.5,2), xlim=c(0,4), las=1, main="PCF patron aleatorio",
legend=TRUE)
env.rand<-envelope(aleatorio, pcf, nsim=99, correction="best",
r=seq(0, 7, by=0.1))
plot(env.rand, ylim=c(0.5,2), xlim=c(0,4), las=1, main="PCF patron aleatorio",
legend=TRUE)
env.rand<-envelope(aleatorio, pcf, nsim=99, correction="isotropic",
r=seq(0, 7, by=0.1))
agregado<-rMatClust(0.03, 3, 120, win=owin(c(0,20), c(0,30)))
agregado
summary(agregado)
plot(agregado, pch=19, cex=0.5, main="Patrón de puntos agregado")
env.agg<-envelope(agregado, pcf, nsim=99, correction="best",
r=seq(0, 10, by=0.1))
plot(env.agg, ylim=c(0.5,2), xlim=c(0,4), las=1,
main="PCF patron puntos agregado", xlab = "distancia entre puntos",
legend=FALSE)
library(spatstat)
rm(list = ls())
aleatorio <- rpoispp(lambda = 4, win = owin(c(0,14), c(0,20)))
aleatorio
setwd("c:\\Users\\mauri\\OneDrive\\Documents\\GitHub\\ModelacionEcologica\\Tarea8")
list.files()
plot(aleatorio, pch=19, cex=0.5, main="Patrón de puntos aleatorio")
summary(aleatorio)
?pch
env.rand<-envelope(aleatorio, pcf, nsim=99, correction="isotropic",
r=seq(0, 7, by=0.1))
?envelope
plot(env.rand, ylim=c(0.5,2), xlim=c(0,4), las=1,
main="PCF patron puntos aleatorio", xlab = "distancia entre puntos",
legend=TRUE)
agregado<-rMatClust(0.03, 3, 120, win=owin(c(0,20), c(0,30)))
agregado
summary(agregado)
plot(agregado, pch=19, cex=0.5, main="Patrón de puntos agregado")
env.agg<-envelope(agregado, pcf, nsim=99, correction="best",
r=seq(0, 10, by=0.1))
plot(env.agg, ylim=c(0.5,2), xlim=c(0,4), las=1,
main="PCF patron puntos agregado", xlab = "distancia entre puntos",
legend=FALSE)
summary(agregado)
#3
#3
#3
plot(env.agg, ylim=c(0.5,2), xlim=c(0,4), las=1,
main="PCF patron puntos agregado", xlab = "distancia entre puntos",
legend=FALSE)
#3
list()
list.files()
#3
list.files()
chinamuerta <- read.csv("veg_chinamuerta.csv")
str(chinamuerta)
lim <- owin(c(0,10),c(0,20))
plot(lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
lim <- owin(c(0,100),c(0,200))
plot(lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
lim <- owin(c(0,10),c(20,0))
lim <- owin(c(0,1000),c(0,2000))
plot(lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
lim <- owin(c(0,5000),c(0,5000))
plot(lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
#Mediana severidad subset y puntos
ms<-subset(cm, severidad=="media")
#Mediana severidad subset y puntos
mediaSeveridad<-subset(chinamuerta, severidad=="media")
ms.ppp<-ppp(mediaSeveridad$x, mediaSeveridad$y, window=lim)
summary(ms.ppp)
plot(ms.ppp, cex=1, pch=21, bg="yellow", main="Rebrotes en zonas de media Severidad")
lim <- owin(c(0,10),c(0,20))
plot(lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
#Mediana severidad subset y puntos
mediaSeveridad<-subset(chinamuerta, severidad=="media")
ms.ppp<-ppp(mediaSeveridad$x, mediaSeveridad$y, window=lim)
summary(ms.ppp)
plot(ms.ppp, cex=1, pch=21, bg="yellow", main="Rebrotes en zonas de media Severidad")
sum(altaSeveridad)
colsum(altaSeveridad)
###################################
############ TAREA 8 ##############
###################################
### Mauricio Arismendi Aedo #######
###################################
### m.arismendi02@ufromail.cl######
###################################
# Ingeniería en Recursos Naturales#
?colsum
###################################
############ TAREA 8 ##############
###################################
### Mauricio Arismendi Aedo #######
###################################
### m.arismendi02@ufromail.cl######
###################################
# Ingeniería en Recursos Naturales#
??colsum
colsums(altaSeveridad)
summary(altaSeveridad)
summary(mediaSeveridad)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
summary(altaSeveridad)
summary(mediaSeveridad)
#Mediana severidad subset y puntos
mediaSeveridad<-subset(chinamuerta, severidad=="media")
ms.ppp<-ppp(mediaSeveridad$x, mediaSeveridad$y, window=lim)
summary(ms.ppp)
plot(ms.ppp, cex=1, pch=21, bg="yellow", main="Rebrotes en zonas de media Severidad")
#intervalo de confianza
ms.env<-envelope(ms.ppp,pcf, correction="isotripic", nsim=99,
r=seq(0,5, by=0.1))
#intervalo de confianza
ms.env<-envelope(ms.ppp,pcf, correction="isotropic", nsim=99,
r=seq(0,5, by=0.1))
#intervalo de confianza
ms.env<-envelope(ms.ppp,pcf, correction="isotropic", nsim=99,
r=seq(0,5, by=0.1))
plot(ms.env,ylim=c(0.3,3.8),main="PCF Rebrotes en Media Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
plot(ms.pcf, xlim=c(0,5, xlab = ("Distancia Radial")))
#media severidad
ms.pcf<-pcf(ms.ppp, r=seq(0,5, by=0.1))
plot(ms.pcf, xlim=c(0,5, xlab = ("Distancia Radial")))
plot(ms.pcf, xlim=c(0,5), xlab = ("Distancia Radial"))
#intervalo de confianza
ms.env<-envelope(ms.ppp,pcf, correction="isotropic", nsim=99,
r=seq(0,5, by=0.1))
plot(ms.env,ylim=c(0.3,3.8),main="PCF Rebrotes en Media Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
lim <- owin(c(0,10),c(0,20))
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
plot(ms.ppp, cex=1, pch=21, bg="red", main="Rebrotes en zonas de media Severidad")
summary(altaSeveridad)
plot(altaSeveridadppp, cex=1, pch=21, bg="red", main="Rebrotes en zonas de alta Severidad")
as.pcf <- pcf(altaSeveridadppp, r=seq(0,5, by=0.1))
plot(as.pcf, xlim=c(0,5), main=("PCF Rebrotes en Zonas de Alta Severidad"), xlab= c
("Distancia radial"))
lim <- owin(c(0,999999999999999999999999),c(0,9999999999999999999999999999))
plot(lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
lim <- owin(c(0,1),c(0,1))
plot(lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
lim <- owin(c(0,50),c(0,50))
plot(lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
str(chinamuerta)
View(chinamuerta)
View(altaSeveridadppp)
View(altaSeveridad)
lim <- owin(c(0,50),c(0,50))
plot(lim)
altaSeveridad <- subset(chinamuerta, severidad =="alta")
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, sindow=lim)
altaSeveridadppp <- ppp(altaSeveridad$x, altaSeveridad$y, window=lim)
plot(altaSeveridadppp, cex=1, pch=21, bg="red", main="Rebrotes en zonas de alta Severidad")
as.pcf <- pcf(altaSeveridadppp, r=seq(0,5, by=0.1))
plot(as.pcf, xlim=c(0,5), main=("PCF Rebrotes en Zonas de Alta Severidad"), xlab= c
("Distancia radial"))
ms.env<-envelope(altaSeveridadppp,pcf, correction="isotropic", nsim=99,
r=seq(0,5, by=0.1))
plot(ms.env,ylim=c(0.3,3.8),main="PCF Rebrotes en Media Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
ms.env<-envelope(altaSeveridadppp,pcf, correction="better", nsim=99,
r=seq(0,5, by=0.1))
plot(ms.env,ylim=c(0.3,3.8),main="PCF Rebrotes en Media Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
as.pcf <- pcf(altaSeveridadppp, r=seq(0,5, by=0.1))
plot(as.pcf, xlim=c(0,5), main=("PCF Rebrotes en Zonas de Alta Severidad"), xlab= c
("Distancia radial"))
ms.env<-envelope(altaSeveridadppp,pcf, correction="better", nsim=99,
r=seq(0,5, by=0.1))
plot(ms.env,ylim=c(0.3,3.8),main="PCF Rebrotes en Media Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
plot(ms.env,ylim=c(0.3,3.8),main="PCF Rebrotes en Alta Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
plot(ms.env,ylim=c(1,5),main="PCF Rebrotes en Media Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
plot(ms.env,ylim=c(0.1,5),main="PCF Rebrotes en Media Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
plot(ms.env,ylim=c(0.1,10),main="PCF Rebrotes en Media Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
plot(ms.env,ylim=c(0.1,100),main="PCF Rebrotes en Media Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
plot(ms.env,ylim=c(0.1,100),main="PCF Rebrotes en Alta Severidad",
xlim=c(0,5), xlab="Distancia Radial. (r)", las=1)
